#!/usr/bin/env bash

set -Eeuo pipefail

trap print_stack ERR
print_stack() {
  echo "❌ Error occurred at line $LINENO in script $0. Stack trace:" >&2
  for i in "${!FUNCNAME[@]}"; do
    [[ $i -eq 0 ]] && continue
    echo "  at ${FUNCNAME[$i]}() in ${BASH_SOURCE[$i]}:${BASH_LINENO[$((i - 1))]}" >&2
  done
}

info() {
  printf '%s %s\n' "[INFO]" "$*" >&2
}

warn() {
  printf '%s %s\n' "[WARN]" "$*" >&2
}

error() {
  printf '%s %s\n' "[ERROR]" "$*" >&2
}

die() {
  error "$@"
  exit 1
}

has_flag() {
  local flag="$1"; shift
  local key value

  for arg in "$@"; do
    grep -q "^-" <<< "${arg}" || continue

    IFS='=' read -r key value <<< "${arg}"
    [[ "${key}" == "${flag}" ]] && return 0
  done

  return 1
}

flag_value() {
  local flag="$1"; shift
  local key value

  for arg in "$@"; do
    IFS='=' read -r key value <<< "${arg}"
    [[ "${key}" == "${flag}" ]] && printf '%s\n' "${value}"
  done

  return 0
}

is_git_repo() {
  local repo_dir="$1"

  test -d "${repo_dir}/.git" && return 0
  [[ "$(git -C "${repo_dir}" rev-parse --is-bare-repository 2>&1)" == "true" ]] && return 0

  return 1
}
